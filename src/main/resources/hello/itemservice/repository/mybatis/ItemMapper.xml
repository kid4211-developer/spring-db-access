<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="hello.itemservice.repository.mybatis.ItemMapper">
    <!--
        - useGeneratedKeys 는 데이터베이스가 키를 생성해주는 IDENTITY 전략일때 사용
        - 파라미터는 #{} 문법을 사용하게되면 PreparedStatement 를 사용
    -->
    <insert id="save" useGeneratedKeys="true" keyProperty="id">
        insert into item (item_name, price, quantity)
        values (#{itemName}, #{price}, #{quantity})
    </insert>

    <update id="update">
        update item
        set item_name=#{updateParam.itemName},
            price=#{updateParam.price},
            quantity=#{updateParam.quantity}
        where id = #{id}
    </update>

    <!-- resultType 은 JdbcTemplate 의 BeanPropertyRowMapper 처럼 SELECT SQL 의 결과를 객체로 변환해준다. -->
    <select id="findById" resultType="Item">
        select id, item_name, price, quantity
        from item
        where id = #{id}
    </select>

    <select id="findAll" resultType="Item">
        select id, item_name, price, quantity
        from item
        <where>
            <if test="itemName != null and itemName != ''">
                and item_name like concat('%',#{itemName},'%')
            </if>
            <if test="maxPrice != null">
                <![CDATA[and price <= #{maxPrice}]]>
            </if>
        </where>
    </select>
</mapper>